{"version":3,"sources":["../index.js"],"names":["initialState","options","state","mode","handlers","middlewares","Wrapper","props","off","on","shouldComponentUpdate","ex","isDevMode","console","warn","forceUpdate","stateToProps","nextProps","nextMappedProps","mapProps","ownedProps","shallowEqual","mappedProps","unmount","component","lastProps","promise","promiseResult","isClass","isComponent","renderResult","then","lastResult","result","default","success","failure","loading","normalizedProps","error","undefined","Component","handler","push","index","indexOf","splice","notifyChange","target","i","length","use","arguments","wrapComponent","get","view","createDispatcher","action","slice","dispatcher","args","set","newState","isMergingMode","context","compareState","current","next","changed","key","process","reduce","newTarget","Object","assign","app","hoc","env","NODE_ENV","prototype","PureComponent","value1","value2","Date","getTime","Array","isArray","value1Keys","keys"],"mappings":"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","file":"index.js","sourcesContent":["import { Component, PureComponent, createElement } from 'react';\r\n\r\nconst isDevMode =\r\n  !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\r\n\r\nfunction isComponent(component) {\r\n  return (\r\n    typeof component === 'function' &&\r\n    (component.prototype instanceof Component ||\r\n      component.prototype instanceof PureComponent)\r\n  );\r\n}\r\n\r\nfunction shallowEqual(value1, value2) {\r\n  if (value1 === value2) return true;\r\n  if (value1 instanceof Date && value2 instanceof Date) {\r\n    return value1.getTime() === value2.getTime();\r\n  }\r\n  if (value1 && value2) {\r\n    if (Array.isArray(value1)) {\r\n      const length = value1.length;\r\n      if (length !== value2.length) return false;\r\n      for (let i = 0; i < length; i++) {\r\n        if (value1[i] !== value2[i]) return false;\r\n      }\r\n      return true;\r\n    }\r\n    const value1Keys = Object.keys(value1);\r\n    if (value1Keys.length !== Object.keys(value2).length) return false;\r\n    for (let key of value1Keys) {\r\n      if (value1[key] !== value2[key]) return false;\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default function(initialState = {}, options = {}) {\r\n  let state = initialState;\r\n  const { mode = 'merge' } = options;\r\n  const handlers = [];\r\n  const middlewares = [];\r\n\r\n  class Wrapper extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.off = on(() => {\r\n        try {\r\n          if (!this.shouldComponentUpdate(this.props)) return;\r\n        } catch (ex) {\r\n          if (isDevMode) {\r\n            console.warn(ex);\r\n          }\r\n          return;\r\n        }\r\n        this.forceUpdate();\r\n      });\r\n\r\n      this.shouldComponentUpdate(this.props);\r\n    }\r\n\r\n    mapProps(props) {\r\n      return this.props.stateToProps(state, props);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n      const nextMappedProps = this.mapProps(nextProps.ownedProps);\r\n      if (shallowEqual(nextMappedProps, this.mappedProps)) {\r\n        return false;\r\n      }\r\n      this.mappedProps = nextMappedProps;\r\n      return true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.unmount = true;\r\n      this.off();\r\n    }\r\n\r\n    render() {\r\n      const props = this.mappedProps;\r\n      const component = this.props.component;\r\n      if (this.lastProps === props) {\r\n        // is async component\r\n        if (this.promise) {\r\n          return this.promiseResult;\r\n        }\r\n      } else {\r\n        // props has been changed\r\n      }\r\n\r\n      this.lastProps = props;\r\n      const isClass = isComponent(component);\r\n      if (isClass) {\r\n        return createElement(component, props);\r\n      }\r\n      const renderResult = component(props, this);\r\n      if (renderResult && typeof renderResult.then === 'function') {\r\n        this.promise = renderResult;\r\n        renderResult.then(\r\n          result => {\r\n            if (this.promise !== renderResult) return;\r\n            if (this.lastResult === result) return;\r\n\r\n            this.lastResult = result;\r\n\r\n            if (typeof result === 'object' && result.default) {\r\n              // support import() result\r\n              result = result.default;\r\n            }\r\n\r\n            const { success, failure, loading, ...normalizedProps } = props;\r\n\r\n            if (success) {\r\n              result = success(result);\r\n            }\r\n\r\n            if (typeof result === 'function') {\r\n              if (isComponent(result)) {\r\n                result = createElement(result, normalizedProps);\r\n              } else {\r\n                result = result(normalizedProps);\r\n              }\r\n            }\r\n\r\n            this.promiseResult = result;\r\n            this.forceUpdate();\r\n          },\r\n          error => {\r\n            if (this.promise !== renderResult) return;\r\n            this.lastResult = error;\r\n            this.promiseResult =\r\n              typeof props.failure === 'function'\r\n                ? props.failure(error)\r\n                : props.failure !== undefined\r\n                ? props.failure\r\n                : error;\r\n          }\r\n        );\r\n        return props.loading === undefined ? null : props.loading;\r\n      }\r\n      return renderResult;\r\n    }\r\n  }\r\n\r\n  function on(handler) {\r\n    handlers.push(handler);\r\n    return function() {\r\n      const index = handlers.indexOf(handler);\r\n      if (index !== -1) {\r\n        handlers.splice(index, 1);\r\n      }\r\n    };\r\n  }\r\n\r\n  function notifyChange(target) {\r\n    for (let i = 0, length = handlers.length; i < length; i++) {\r\n      const handler = handlers[i];\r\n      handler && handler(state);\r\n    }\r\n  }\r\n\r\n  function use() {\r\n    middlewares.push(...arguments);\r\n  }\r\n\r\n  function wrapComponent(stateToProps, component) {\r\n    return props =>\r\n      createElement(Wrapper, { stateToProps, component, ownedProps: props });\r\n  }\r\n\r\n  function get() {\r\n    if (!arguments.length) return state;\r\n    if (arguments.length > 1) {\r\n      return wrapComponent(arguments[0], arguments[1]);\r\n    }\r\n    const view = arguments[0];\r\n    return function(props) {\r\n      return view(state, props);\r\n    };\r\n  }\r\n\r\n  function createDispatcher(action, target, slice) {\r\n    const dispatcher = function(...args) {\r\n      return set(action(slice ? state[slice] : state, ...args), target, slice);\r\n    };\r\n\r\n    if (target === undefined) {\r\n      target = dispatcher;\r\n    }\r\n\r\n    return dispatcher;\r\n  }\r\n\r\n  function set() {\r\n    if (typeof arguments[0] === 'function') {\r\n      return createDispatcher(arguments[0], arguments[1]);\r\n    }\r\n\r\n    if (typeof arguments[0] === 'string') {\r\n      return createDispatcher(arguments[1], arguments[2], arguments[0]);\r\n    }\r\n\r\n    const newState = arguments[0];\r\n    const target = arguments[1];\r\n    const slice = arguments[2];\r\n    let isMergingMode = mode === 'merge';\r\n    const context = { get, set };\r\n    const compareState = (current, next) => {\r\n      let changed = false;\r\n      if (isMergingMode) {\r\n        for (let key in next) {\r\n          if (current[key] !== next[key]) {\r\n            changed = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return changed;\r\n    };\r\n    const process = result => {\r\n      middlewares.reduce(\r\n        (next, current) => {\r\n          return function(result, newTarget) {\r\n            current(context)(next)(\r\n              result,\r\n              newTarget === undefined ? target : newTarget\r\n            );\r\n          };\r\n        },\r\n        function(result) {\r\n          if (slice) {\r\n            if (compareState(state[slice], result)) return;\r\n            result = Object.assign({}, state, { [slice]: result });\r\n          }\r\n\r\n          if (result === undefined || result === null || result === state)\r\n            return;\r\n          if (compareState(state, result)) {\r\n            result = Object.assign({}, state, result);\r\n          }\r\n\r\n          state = result;\r\n          notifyChange(target);\r\n        }\r\n      )(result, target);\r\n\r\n      return state;\r\n    };\r\n\r\n    if (newState && typeof newState.then === 'function') {\r\n      isMergingMode = true;\r\n      return newState.then(process);\r\n    }\r\n    return process(newState);\r\n  }\r\n\r\n  function app(view) {\r\n    return view(state);\r\n  }\r\n\r\n  return {\r\n    app,\r\n    get,\r\n    set,\r\n    on,\r\n    use,\r\n    hoc: stateToProps => component => get(stateToProps, component)\r\n  };\r\n}\r\n"]}