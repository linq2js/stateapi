{"version":3,"sources":["../index.js"],"names":["initialState","options","state","mode","handlers","middlewares","computedProps","Wrapper","props","off","on","shouldComponentUpdate","ex","isDevMode","console","warn","forceUpdate","stateToProps","nextProps","nextMappedProps","mapProps","ownedProps","shallowEqual","mappedProps","unmount","component","lastProps","promise","promiseResult","lastResult","isComp","renderResult","then","result","default","success","failure","loading","normalizedProps","isComponent","error","undefined","Component","handler","push","index","indexOf","splice","notifyChange","target","i","length","use","arguments","wrapComponent","get","view","createDispatcher","action","slice","dispatcher","args","set","newState","isMergingMode","context","compareState","current","next","changed","key","process","reduce","newTarget","Object","assign","compute","app","computed","Error","hasChanged","parts","split","prop","shift","inMemory","substr","selectors","map","s","selector","apply","concat","hoc","env","NODE_ENV","prototype","PureComponent","computedPropName","evalutator","value","value1","value2","ignoreFuncs","Date","getTime","Array","isArray","value1Prop","value2Prop","value1Keys","keys","funcs","lastFunc","pop","lastArgs","wrapper","argSelectors","x","mappedArgs"],"mappings":"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","file":"index.js","sourcesContent":["import { Component, PureComponent, createElement } from 'react';\r\n\r\nconst isDevMode =\r\n  !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\r\n\r\nfunction isComponent(component) {\r\n  return (\r\n    typeof component === 'function' &&\r\n    (component.prototype instanceof Component ||\r\n      component.prototype instanceof PureComponent)\r\n  );\r\n}\r\n\r\nfunction compute(computedProps, state) {\r\n  for (let computedPropName in computedProps) {\r\n    const evalutator = computedProps[computedPropName];\r\n    if (evalutator.inMemory) continue;\r\n    const value = evalutator(state);\r\n    state[computedPropName] = value;\r\n  }\r\n}\r\n\r\nfunction shallowEqual(value1, value2, ignoreFuncs) {\r\n  if (value1 === value2) return true;\r\n  if (value1 instanceof Date && value2 instanceof Date) {\r\n    return value1.getTime() === value2.getTime();\r\n  }\r\n  if (value1 && value2) {\r\n    if (Array.isArray(value1)) {\r\n      const length = value1.length;\r\n      if (length !== value2.length) return false;\r\n      for (let i = 0; i < length; i++) {\r\n        const value1Prop = value1[i];\r\n        const value2Prop = value2[i];\r\n        if (\r\n          ignoreFuncs &&\r\n          typeof value1Prop === 'function' &&\r\n          typeof value2Prop === 'function'\r\n        )\r\n          continue;\r\n        if (value1Prop !== value2Prop) return false;\r\n      }\r\n      return true;\r\n    }\r\n    const value1Keys = Object.keys(value1);\r\n    if (value1Keys.length !== Object.keys(value2).length) return false;\r\n    for (let key of value1Keys) {\r\n      const value1Prop = value1[key];\r\n      const value2Prop = value2[key];\r\n      if (\r\n        ignoreFuncs &&\r\n        typeof value1Prop === 'function' &&\r\n        typeof value2Prop === 'function'\r\n      )\r\n        continue;\r\n      if (value1Prop !== value2Prop) return false;\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default function(initialState = {}, options = {}) {\r\n  let state = initialState;\r\n  const { mode = 'merge' } = options;\r\n  const handlers = [];\r\n  const middlewares = [];\r\n  const computedProps = {};\r\n\r\n  class Wrapper extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.off = on(() => {\r\n        // this might cause unwanted error\r\n        // typically I should use this.setState(dummyState) to force component re-render\r\n        // but for performance improving, setState(dummyState) leads to more validation steps and get slow,\r\n        // so I use forceUpdate for the best performance (~2x)\r\n        try {\r\n          if (!this.shouldComponentUpdate(this.props)) return;\r\n        } catch (ex) {\r\n          if (isDevMode) {\r\n            console.warn(ex);\r\n          }\r\n          return;\r\n        }\r\n        this.forceUpdate();\r\n      });\r\n\r\n      this.shouldComponentUpdate(this.props);\r\n    }\r\n\r\n    mapProps(props) {\r\n      return this.props.stateToProps(state, props);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n      const nextMappedProps = this.mapProps(nextProps.ownedProps);\r\n      if (shallowEqual(nextMappedProps, this.mappedProps, true)) {\r\n        return false;\r\n      }\r\n      this.mappedProps = nextMappedProps;\r\n      return true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.unmount = true;\r\n      this.off();\r\n    }\r\n\r\n    render() {\r\n      const props = this.mappedProps;\r\n      const component = this.props.component;\r\n      if (this.lastProps === props) {\r\n        // is async component\r\n        if (this.promise) {\r\n          return this.promiseResult;\r\n        }\r\n      } else {\r\n        // props has been changed\r\n        // clean last result\r\n        delete this.lastResult;\r\n      }\r\n\r\n      this.lastProps = props;\r\n      if (this.props.isComp) {\r\n        return createElement(component, props);\r\n      }\r\n      const renderResult = component(props, this);\r\n      // renderResult might be promise (import, custom data loading)\r\n      if (renderResult && typeof renderResult.then === 'function') {\r\n        this.promise = renderResult;\r\n        renderResult.then(\r\n          result => {\r\n            if (this.promise !== renderResult) return;\r\n            if (this.lastResult === result) return;\r\n\r\n            this.lastResult = result;\r\n\r\n            // handle import default\r\n            if (\r\n              typeof result === 'object' &&\r\n              typeof result.default === 'function'\r\n            ) {\r\n              result = result.default;\r\n            }\r\n\r\n            // exclude async props\r\n            const { success, failure, loading, ...normalizedProps } = props;\r\n\r\n            // call success handling if any\r\n            if (success) {\r\n              result = success(result);\r\n            }\r\n\r\n            // result might be component, so we poss all props of current to it\r\n            if (typeof result === 'function') {\r\n              if (isComponent(result)) {\r\n                result = createElement(result, normalizedProps);\r\n              } else {\r\n                result = result(normalizedProps, this);\r\n              }\r\n            }\r\n\r\n            this.promiseResult = result;\r\n            this.forceUpdate();\r\n          },\r\n          error => {\r\n            if (this.promise !== renderResult) return;\r\n            this.lastResult = error;\r\n            this.promiseResult =\r\n              typeof props.failure === 'function'\r\n                ? props.failure(error)\r\n                : props.failure !== undefined\r\n                ? props.failure\r\n                : error;\r\n          }\r\n        );\r\n        return props.loading === undefined ? null : props.loading;\r\n      }\r\n      return renderResult;\r\n    }\r\n  }\r\n\r\n  function on(handler) {\r\n    handlers.push(handler);\r\n    return function() {\r\n      const index = handlers.indexOf(handler);\r\n      if (index !== -1) {\r\n        handlers.splice(index, 1);\r\n      }\r\n    };\r\n  }\r\n\r\n  function notifyChange(target) {\r\n    for (let i = 0, length = handlers.length; i < length; i++) {\r\n      const handler = handlers[i];\r\n      handler && handler(state);\r\n    }\r\n  }\r\n\r\n  function use() {\r\n    middlewares.push(...arguments);\r\n  }\r\n\r\n  function wrapComponent(stateToProps, component) {\r\n    return props =>\r\n      createElement(Wrapper, {\r\n        stateToProps,\r\n        component,\r\n        ownedProps: props,\r\n        isComp: isComponent(component)\r\n      });\r\n  }\r\n\r\n  function get() {\r\n    if (!arguments.length) return state;\r\n    if (arguments.length > 1) {\r\n      return wrapComponent(arguments[0], arguments[1]);\r\n    }\r\n    const view = arguments[0];\r\n    return function(props) {\r\n      return view(state, props);\r\n    };\r\n  }\r\n\r\n  function createDispatcher(action, target, slice) {\r\n    const dispatcher = function(...args) {\r\n      return set(action(slice ? state[slice] : state, ...args), target, slice);\r\n    };\r\n\r\n    if (target === undefined) {\r\n      target = dispatcher;\r\n    }\r\n\r\n    return dispatcher;\r\n  }\r\n\r\n  function set() {\r\n    if (typeof arguments[0] === 'function') {\r\n      return createDispatcher(arguments[0], arguments[1]);\r\n    }\r\n\r\n    if (typeof arguments[0] === 'string') {\r\n      return createDispatcher(arguments[1], arguments[2], arguments[0]);\r\n    }\r\n\r\n    const newState = arguments[0];\r\n    const target = arguments[1];\r\n    const slice = arguments[2];\r\n    let isMergingMode = mode === 'merge';\r\n    const context = { get, set };\r\n    const compareState = (current, next) => {\r\n      let changed = false;\r\n      if (isMergingMode) {\r\n        for (let key in next) {\r\n          if (current[key] !== next[key]) {\r\n            changed = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return changed;\r\n    };\r\n    const process = result => {\r\n      middlewares.reduce(\r\n        (next, current) => (result, newTarget) => {\r\n          current(context)(next)(\r\n            result,\r\n            newTarget === undefined ? target : newTarget\r\n          );\r\n        },\r\n        // default middle, process result\r\n        result => {\r\n          if (slice) {\r\n            if (compareState(state[slice], result)) return;\r\n            result = Object.assign({}, state, { [slice]: result });\r\n          }\r\n\r\n          if (result === undefined || result === null || result === state)\r\n            return;\r\n          if (compareState(state, result)) {\r\n            result = Object.assign({}, state, result);\r\n          }\r\n\r\n          state = result;\r\n          // call computed props\r\n          compute(computedProps, state);\r\n          notifyChange(target);\r\n        }\r\n      )(result, target);\r\n\r\n      return state;\r\n    };\r\n\r\n    if (newState && typeof newState.then === 'function') {\r\n      isMergingMode = true;\r\n      return newState.then(process);\r\n    }\r\n    return process(newState);\r\n  }\r\n\r\n  function app(view) {\r\n    return get(view)();\r\n  }\r\n\r\n  function computed(props) {\r\n    if (typeof props === 'string') {\r\n      if (!(props in computedProps)) {\r\n        throw new Error(`No computed prop named ${props}`);\r\n      }\r\n      return computedProps[props](state);\r\n    }\r\n    let hasChanged = false;\r\n    for (let i in props) {\r\n      const parts = i.split(/\\s+/);\r\n      // prop name is first part\r\n      let prop = parts.shift();\r\n      const inMemory = prop[0] === '@';\r\n      if (inMemory) {\r\n        prop = prop.substr(1);\r\n      }\r\n      const selectors = parts.map(s => {\r\n        // create default computed props\r\n        if (!(s in computedProps)) {\r\n          return Object.assign(state => state[s], { inMemory: true });\r\n        }\r\n        return computedProps[s];\r\n      });\r\n\r\n      computedProps[prop] = Object.assign(\r\n        selector.apply(null, selectors.concat(props[i])),\r\n        {\r\n          inMemory\r\n        }\r\n      );\r\n      hasChanged = true;\r\n    }\r\n\r\n    if (hasChanged) {\r\n      // re-compute once computedProps changed\r\n      compute(computedProps, state);\r\n    }\r\n  }\r\n\r\n  return {\r\n    app,\r\n    get,\r\n    set,\r\n    on,\r\n    use,\r\n    computed,\r\n    hoc: stateToProps => component => get(stateToProps, component)\r\n  };\r\n}\r\n\r\nexport function selector(...funcs) {\r\n  const lastFunc = funcs.pop();\r\n  let lastArgs, lastResult;\r\n  const wrapper = function(...args) {\r\n    if (shallowEqual(lastArgs, args)) {\r\n      return lastResult;\r\n    }\r\n    lastArgs = args;\r\n    return (lastResult = lastFunc.apply(null, args));\r\n  };\r\n\r\n  if (!funcs.length) {\r\n    return wrapper;\r\n  }\r\n\r\n  const argSelectors = funcs.map(x => selector(x));\r\n  return function(...args) {\r\n    const mappedArgs = argSelectors.map(x => x.apply(null, args));\r\n    return wrapper.apply(null, mappedArgs);\r\n  };\r\n}\r\n"]}